@name 'The' Radio
@inputs [Speaker_1 Speaker_2 Speaker_3 Speaker_4]:entity
@outputs 
@persist Speakers:array [HostList Channles]:gtable Channle
@trigger 
if(first()){
 #include "bhc/some_function_libaries/fileFuncs"
 #include "bhc/some_function_libaries/arrayFuncs"
 #include "bhc/some_function_libaries/miscFuncs"
 runOnChat(1)
 Channles = gTable("S_radio, chans",1)
 HostList = gTable("S_radio, hosts",1)
 HostList[104,string]="Steamrasd.adada"
 Speakers = array(Speaker_1,
                  Speaker_2,
                  Speaker_3,
                  Speaker_4)
    function void playOnEnts(S:string){
        entity():soundPlay(1,0,S)
        for(I=1,4){
            Speakers[I,entity]:soundPlay(I+1,0,S)
        }
    }
    function number aicdj(N){ #Am I Channle DJ
        if(HostList[N,string]:explode("."):afind(owner():steamID())){
            return 1
        }else{
            return 0
        }
    }
}
if(chatClk(owner())){
 local A = owner():lastSaid():lower():explode(" ")
    if(A[1,string]=="{rad"){
        if(A[2,string]=="setchan"){
            Channle = A[3,string]:toNumber()
            print(Channle)
            if(Channles[Channle:toString()+"_Playing",number]==1){
                print("A song is in progress, waiting for it to end")  
                local Tmer = whatsLarger(Channles[Channle+"_at",number],Channles[Channle+"_songlength",number])-whatsSmaller(Channles[Channle+"_at",number],Channles[Channle+"_songlength",number])
                timer("play",Tmer)
            }else{
                playOnEnts(Channles[Channle:toString()+"_Playing",string])
            }
        }elseif(A[2,string]=="addtoplaylist"){
            if(Channle != 0){
                if(aicdj(Channle)==1){
                    Channles[Channle:toString()+"_Playlist",string]= Channles[Channle:toString()+"_Playlist",string]+A[3,string]+"."
                    print(Channles[Channle:toString()+"_Playlist",string])
                }else{
                    print("You're not the channle DJ, you can't do that!")
                }
            }else{
                print("You must set a channle first!")
            }
        }elseif(A[2,string]=="broad-cast"){
            Channles[Channle+"_songlength",number]=soundDuration(Channles[Channle:toString()+"_Playlist",string]:explode(".")[1,string])
            Channles[Channle+"_at",number]=0
            Channles[Channle:toString()+"_Playing",number]=1
            playOnEnts(Channles[Channle:toString()+"_Playlist",string]:explode(".")[1,string])
            timer("sClk",1000)
        }
    }
}
if(clk("sClk")){
 Channles[Channle+"_at",number]=Channles[Channle+"_at",number]+1
    if(Channles[Channle+"_at",number]>=Channles[Channle+"_songlength",number]){
        if(Channles[Channle+"_song",number]>=Channles[Channle:toString()+"_Playlist",string]:explode("."):count()){
            Channles[Channle+"_song",number]=1
        }else{
            Channles[Channle+"_song",number]=Channles[Channle+"_song",number]+1
        }
        Channles[Channle+"_at",number]=Channles[Channle+"_at",number]+1
    }else{
        timer("sClk",1000)
    }
}
if(clk("play")){
 playOnEnts(Channles[Channle:toString()+"_Playlist",string]:explode(".")[Channles[Channle+"_song",number],string])
 local Tmer = whatsLarger(Channles[Channle+"_at",number],Channles[Channle+"_songlength",number])-whatsSmaller(Channles[Channle+"_at",number],Channles[Channle+"_songlength",number])
 timer("play",Tmer)
}
