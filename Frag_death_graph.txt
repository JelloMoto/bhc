@name Frag death graph
@inputs S:wirelink
@outputs 
@persist I D E [A A2]:array Deaths Frags
@trigger 

if(first()){
    while(A:count() != 128){
        A[A:count()+1,number] = A:count()*4
    }
    A2 = players()
    S:egpClear()
    S:egpLine(300,vec2(0, 256), vec2(512, 256))
    timer("min",0)
}
if(clk("min")){
    Deaths = 0
    Frags = 0
    for(I=1, A2:count()){
        if(A2[I,entity]:frags() < 0){
            Deaths-= 1
            Frags+= 1
        }else{
        
            Frags = Frags+A2[I,entity]:frags()
        }
        Deaths = Deaths-A2[I,entity]:deaths()
    }
    if(I >= 128){
        I = 1
    }
    S:egpRemove(299)
    #S:egpLine(I, vec2(A[I,number],256-D), vec2(A[I+1,number],256-Deaths:toString():replace("-",""):toNumber()*2))
    S:egpCircle(299, vec2(A[I+1,number],256+A2:count()), vec2(10,10))
    S:egpMaterial(299, "hud/leaderboard_dead")
    S:egpSize(I,2)
    
    S:egpCircle(I, vec2(A[I,number],256-D), vec2(5,5))
    S:egpMaterial(I, "hud/leaderboard_dead")
    
    #S:egpLine(I+100, vec2(A[I,number],256-E), vec2(A[I+1,number],256-Frags))
    S:egpCircle(I+100, vec2(A[I,number],256-E*2), vec2(5,5))
    S:egpMaterial(I+100, "hud/leaderboard_dead")
    S:egpSize(I+100,2)
    
    S:egpColor(I+100, vec(0,255,0))
    S:egpColor(I, vec(255,0,0))
    
    S:egpText(298, "Servers collective kills: "+Frags, vec2(A[I,number],266-Frags))
    S:egpText(297, "Servers collective deaths: "+Deaths:toString():replace("-",""):toNumber(), vec2(A[I,number],226-Deaths:toString():replace("-",""):toNumber()))
    
    
    
    D = Deaths:toString():replace("-",""):toNumber()*2
    E = Frags
    I++
    timer("min",30000)
    #timer("min",1000)
}
